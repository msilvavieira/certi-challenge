from int_to_numeral import numerals, int_to_numeral



class TestIntToNumeral(object):
    def test_base_numbers(self):
        assert int_to_numeral(0) == 'zero'
        assert int_to_numeral(1) == 'um'
        assert int_to_numeral(2) == 'dois'
        assert int_to_numeral(3) == 'três'
        assert int_to_numeral(4) == 'quatro'
        assert int_to_numeral(5) == 'cinco'
        assert int_to_numeral(6) == 'seis'
        assert int_to_numeral(7) == 'sete'
        assert int_to_numeral(8) == 'oito'
        assert int_to_numeral(9) == 'nove'

        assert int_to_numeral(10) == 'dez'
        assert int_to_numeral(11) == 'onze'
        assert int_to_numeral(12) == 'doze'
        assert int_to_numeral(13) == 'treze'
        assert int_to_numeral(14) == 'quatorze'
        assert int_to_numeral(15) == 'quinze'
        assert int_to_numeral(16) == 'dezesseis'
        assert int_to_numeral(17) == 'dezessete'
        assert int_to_numeral(18) == 'dezoito'
        assert int_to_numeral(19) == 'dezenove'


    def test_negative_base_numbers(self):
        assert int_to_numeral(-0) == 'zero'
        assert int_to_numeral(-1) == 'menos um'
        assert int_to_numeral(-2) == 'menos dois'
        assert int_to_numeral(-3) == 'menos três'
        assert int_to_numeral(-4) == 'menos quatro'
        assert int_to_numeral(-5) == 'menos cinco'
        assert int_to_numeral(-6) == 'menos seis'
        assert int_to_numeral(-7) == 'menos sete'
        assert int_to_numeral(-8) == 'menos oito'
        assert int_to_numeral(-9) == 'menos nove'

        assert int_to_numeral(-10) == 'menos dez'
        assert int_to_numeral(-11) == 'menos onze'
        assert int_to_numeral(-12) == 'menos doze'
        assert int_to_numeral(-13) == 'menos treze'
        assert int_to_numeral(-14) == 'menos quatorze'
        assert int_to_numeral(-15) == 'menos quinze'
        assert int_to_numeral(-16) == 'menos dezesseis'
        assert int_to_numeral(-17) == 'menos dezessete'
        assert int_to_numeral(-18) == 'menos dezoito'
        assert int_to_numeral(-19) == 'menos dezenove'


    def test_positive_numbers(self):
        assert int_to_numeral(20) == 'vinte'
        assert int_to_numeral(21) == 'vinte e um'
        assert int_to_numeral(40) == 'quarenta'
        assert int_to_numeral(41) == 'quarenta e um'
        assert int_to_numeral(100) == 'cem'
        assert int_to_numeral(101) == 'cento e um'
        assert int_to_numeral(119) == 'cento e dezenove'
        assert int_to_numeral(150) == 'cento e cinquenta'
        assert int_to_numeral(151) == 'cento e cinquenta e um'
        assert int_to_numeral(190) == 'cento e noventa'
        assert int_to_numeral(201) == 'duzentos e um'
        assert int_to_numeral(219) == 'duzentos e dezenove'
        assert int_to_numeral(250) == 'duzentos e cinquenta'
        assert int_to_numeral(251) == 'duzentos e cinquenta e um'
        assert int_to_numeral(999) == 'novecentos e noventa e nove'
        assert int_to_numeral(1000) == 'mil'
        assert int_to_numeral(1001) == 'mil e um'
        assert int_to_numeral(1019) == 'mil e dezenove'
        assert int_to_numeral(1119) == 'mil e cento e dezenove'
        assert int_to_numeral(1042) == 'mil e quarenta e dois'
        assert int_to_numeral(1050) == 'mil e cinquenta'
        assert int_to_numeral(1051) == 'mil e cinquenta e um'
        assert int_to_numeral(1151) == 'mil e cento e cinquenta e um'
        assert int_to_numeral(2000) == 'dois mil'
        assert int_to_numeral(2001) == 'dois mil e um'
        assert int_to_numeral(2019) == 'dois mil e dezenove'
        assert int_to_numeral(2050) == 'dois mil e cinquenta'
        assert int_to_numeral(2051) == 'dois mil e cinquenta e um'
        assert int_to_numeral(2151) == 'dois mil e cento e cinquenta e um'
        assert int_to_numeral(9999) == 'nove mil e novecentos e noventa e nove'
        assert int_to_numeral(10000) == 'dez mil'
        assert int_to_numeral(94587) == 'noventa e quatro mil e quinhentos e oitenta e sete'
        assert int_to_numeral(99999) == 'noventa e nove mil e novecentos e noventa e nove'


    def test_negative_numbers(self):
        assert int_to_numeral(-20) == 'menos vinte'
        assert int_to_numeral(-21) == 'menos vinte e um'
        assert int_to_numeral(-40) == 'menos quarenta'
        assert int_to_numeral(-41) == 'menos quarenta e um'
        assert int_to_numeral(-100) == 'menos cem'
        assert int_to_numeral(-101) == 'menos cento e um'
        assert int_to_numeral(-119) == 'menos cento e dezenove'
        assert int_to_numeral(-150) == 'menos cento e cinquenta'
        assert int_to_numeral(-151) == 'menos cento e cinquenta e um'
        assert int_to_numeral(-190) == 'menos cento e noventa'
        assert int_to_numeral(-201) == 'menos duzentos e um'
        assert int_to_numeral(-219) == 'menos duzentos e dezenove'
        assert int_to_numeral(-250) == 'menos duzentos e cinquenta'
        assert int_to_numeral(-251) == 'menos duzentos e cinquenta e um'
        assert int_to_numeral(-999) == 'menos novecentos e noventa e nove'
        assert int_to_numeral(-1000) == 'menos mil'
        assert int_to_numeral(-1001) == 'menos mil e um'
        assert int_to_numeral(-1019) == 'menos mil e dezenove'
        assert int_to_numeral(-1119) == 'menos mil e cento e dezenove'
        assert int_to_numeral(-1042) == 'menos mil e quarenta e dois'
        assert int_to_numeral(-1050) == 'menos mil e cinquenta'
        assert int_to_numeral(-1051) == 'menos mil e cinquenta e um'
        assert int_to_numeral(-1151) == 'menos mil e cento e cinquenta e um'
        assert int_to_numeral(-2000) == 'menos dois mil'
        assert int_to_numeral(-2001) == 'menos dois mil e um'
        assert int_to_numeral(-2019) == 'menos dois mil e dezenove'
        assert int_to_numeral(-2050) == 'menos dois mil e cinquenta'
        assert int_to_numeral(-2051) == 'menos dois mil e cinquenta e um'
        assert int_to_numeral(-2151) == 'menos dois mil e cento e cinquenta e um'
        assert int_to_numeral(-9999) == 'menos nove mil e novecentos e noventa e nove'
        assert int_to_numeral(-10000) == 'menos dez mil'
        assert int_to_numeral(-94587) == 'menos noventa e quatro mil e quinhentos e oitenta e sete'
        assert int_to_numeral(-99999) == 'menos noventa e nove mil e novecentos e noventa e nove'

